#!/usr/bin/env zsh

function add_notification_text()
{
  local packages_list="$1"
  local result_file="$2"

  local tmp_result_file=$( mktemp )

  echo "${packages_list}" \
    | cut --fields 1 --delimiter ' ' \
    | xargs -I {} pacman --query --info {} \
    | grep --extended-regexp '^Name|^Description' \
    | tr --squeeze-repeats ' ' \
    | cut --fields 3- --delimiter ' ' \
    | paste --delimiters @ - - \
    >> "${tmp_result_file}"

  echo "${packages_list}" \
    | cut --fields 2- --delimiter ' ' \
    | paste --delimiters @ "${tmp_result_file}" - \
    | column --separator @ --table \
    >> "${result_file}"

  rm "${tmp_result_file}"
}

TMP_RESULT_FILE=$(mktemp)

# construct all notification texts
PACMAN_UPDATES=$(checkupdates)
if [[ -n "${PACMAN_UPDATES}" ]]; then
  echo "\n\e[1mPacman\e[0m" >> "${TMP_RESULT_FILE}"
  add_notification_text "${PACMAN_UPDATES}" "${TMP_RESULT_FILE}"
fi

AUR_UPDATES=$(aurcheck -d aur)
if [[ -n "${AUR_UPDATES}" ]]; then
  echo "\n\e[1mAUR\e[0m" >> "${TMP_RESULT_FILE}"
  add_notification_text "${AUR_UPDATES}" "${TMP_RESULT_FILE}"
fi

# exit if no updates available
[[ -s "${TMP_RESULT_FILE}" ]] || exit

# display notification otherwise
notification 'Packages updates available' "${TMP_RESULT_FILE}"
