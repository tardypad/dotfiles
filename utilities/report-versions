#!/usr/bin/env zsh

COMMAND=${0:t}

init_variables() {
  ONLY_DIFF=0
}

usage() {
  cat <<- EOF
	usage: ${COMMAND} [<options>]

	Check and report packages versions:
	- version installed on the system
	- version listed in the READMEs

	Needs to be run from the repository root

	Options:
	  -d,  --diff    only list packages where versions are different
	  -h,  --help    show this message only
	EOF
}

error() {
  [[ -z "$1" ]] || echo "${COMMAND}: $1"
  echo "Try '${COMMAND} --help' for more information."
  exit 1
} >&2

readme_version() {
  local type="$1"
  local item="$2"

  case "${type}" in
    main)
      sed -n "s#^| \[${item}\].*| \[\(.*\)\].*#\1#p" README.md
      ;;
    extra)
      sed -n "s#^| ${item} .*| \[\(.*\)\].*#\1#p" README.md
      ;;
    extension)
      sed -n "s#^| ${item} .*| \[\(.*\)\].*#\1#p" packages/*/README.md
      ;;
  esac
}

pacman_version() {
  local package="$1"

  [[ "${package}" == 'gron' ]] && package='gron-bin'

  local pacman_info=$(
    pacman --query --info "${package}" 2> /dev/null
  )

  if [[ -z "${pacman_info}" ]]; then
    # try with -git suffix if package couldn't be found
    local pacman_info=$(
      pacman --query --info "${package}-git" 2> /dev/null
    )
  fi

  if [[ -z "${pacman_info}" ]]; then
    echo 'unknown'
    return
  fi

  # extract version without the release number
  echo "${pacman_info}" \
    | sed -n 's/^Version *: \(.*\)\-[0-9]*/\1/p'
}

report() {
  local type="$1"

  while read item; do
    local version1=$( pacman_version "${item}" )
    local version2=$( readme_version "${type}" "${item}" )

    if [[ "${ONLY_DIFF}" -eq 1
       && "${version1}" == "${version2}" ]]; then
      continue
    fi

    printf '%s %s %s\n' \
      "${item}" \
      "${version1}" \
      "${version2}"
  done
}

report_all() {
  {
    # main packages
    sed -n 's#^| \[\([^ ]*\)\].*#\1#p' README.md \
      | report main

    # extra packages
    sed -n 's#^| \([a-z][^ ]*\) .*#\1#p' README.md \
      | report extra

    # extensions
    # exclude vim and weechat plugins (not managed by package manager)
    sed -n 's#^| \([a-z][^ ]*\) .*#\1#p' \
      $(
        find packages -maxdepth 2 -type f -name README.md \
          ! -path '*/vim/*' ! -path '*/weechat/*'
      ) \
      | report extension
  } \
    | column --table
}

parse_options() {
  while [[ "$#" -gt 0 ]]; do
    case "$1" in
      -d|--diff)
        ONLY_DIFF=1
        shift;
        ;;
      -h|--help)
        usage
        exit 0
        ;;
      *)
        error "Invalid option '$1'"
        ;;
    esac
  done
}

init_variables
parse_options "$@"

report_all
