#!/bin/sh

init_variables() {
  COMMAND=${0##*/}

  THEME=
}

show_usage() {
  cat <<- EOF
	usage: ${COMMAND} <theme>

	Test the theme colors contrast to each other.
	Only the most meaningful combinations are tested.

	Options:
	  -h     show this message only
	EOF
}

parse_command_line() {
  while getopts h OPT; do
    case "${OPT}" in
      h) show_usage; exit 0 ;;
      ?) exit_error ;;
    esac
  done

  shift $(( OPTIND - 1 ))

  THEME="$1"
}

validate_command_line() {
  if [ -z "${THEME}" ]; then
    exit_error 'missing theme'
  fi

  if [ ! -f "config/colors/base_${THEME}" ]; then
    exit_error "invalid theme '${THEME}'"
  fi
}

# shellcheck disable=SC2120
exit_error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  printf "Try '%s -h' for more information.\n" "${COMMAND}"
  exit 1
} >&2

print_contrast() {
  printf '\033[0m'                               # reset
  printf '\033[38;2;%sm' "$( base_to_rgb "$1" )" # foreground
  printf '\033[48;2;%sm' "$( base_to_rgb "$2" )" # background
  printf '  %s  ' "$1"                           # base 1
  printf '\033[7m'                               # invert background/foreground
  printf '  %s  ' "$2"                           # base 2
  printf '\n\033[0m'                             # reset with newline
}

base_to_hex() {
  sed -n "s/^| $1 | #\([[:alnum:]]\+\) |.*/\1/p" "config/colors/base_${THEME}"
}

hex_to_rgb() {
  HEX_R=$(echo "$1" | cut -c 1-2)
  HEX_G=$(echo "$1" | cut -c 3-4)
  HEX_B=$(echo "$1" | cut -c 5-6)

  # use ; as a delimiter between the RGB components
  # to be able to directly use the full value inside ANSI escape sequences
  printf "%d;%d;%d\n" "0x${HEX_R}" "0x${HEX_G}" "0x${HEX_B}"
}

base_to_rgb() { hex_to_rgb "$( base_to_hex "$1" )"; }

test_contrast() {
  print_contrast base04 base00
  print_contrast base05 base01
  print_contrast base04 base02

  printf '\n'
  print_contrast base03 base00
  print_contrast base04 base00
  print_contrast base05 base00
  print_contrast base06 base00
  print_contrast base07 base00
  print_contrast base08 base00
  print_contrast base09 base00
  print_contrast base0A base00
  print_contrast base0B base00
  print_contrast base0C base00
  print_contrast base0D base00
  print_contrast base0E base00

  printf '\n'
  print_contrast base03 base01
  print_contrast base04 base01
  print_contrast base05 base01
  print_contrast base06 base01
  print_contrast base07 base01
  print_contrast base08 base01
  print_contrast base09 base01
  print_contrast base0A base01
  print_contrast base0B base01
  print_contrast base0C base01
  print_contrast base0D base01
  print_contrast base0E base01
}

init_variables
parse_command_line "$@"
validate_command_line

test_contrast
