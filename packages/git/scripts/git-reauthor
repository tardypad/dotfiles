#!/bin/sh
# commands used:
# - git

init_variables() {
  COMMAND=${0##*/}

  CONFIG=false
  ALL=false
  unset OLD_EMAIL
  unset CORRECT_EMAIL
  unset CORRECT_NAME
  TYPE='both'
}

error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  exit 1
} >&2

reauthor() {
  AUTHOR='
    if ${ALL} || [ "${GIT_AUTHOR_EMAIL}" = "${OLD_EMAIL}" ]; then
      [ -z "${CORRECT_EMAIL+x}" ] || export GIT_AUTHOR_EMAIL="${CORRECT_EMAIL}"
      [ -z "${CORRECT_NAME+x}" ] || export GIT_AUTHOR_NAME="${CORRECT_NAME}"
    fi
  '
  COMMITTER='
    if ${ALL} || [ "${GIT_COMMITTER_EMAIL}" = "${OLD_EMAIL}" ]; then
      [ -z "${CORRECT_EMAIL+x}" ] || export GIT_COMMITTER_EMAIL="${CORRECT_EMAIL}"
      [ -z "${CORRECT_NAME+x}" ] || export GIT_COMMITTER_NAME="${CORRECT_NAME}"
    fi
  '

  case "${TYPE}" in
    author) FILTER="${AUTHOR}" ;;
    committer) FILTER="${COMMITTER}" ;;
    both) FILTER="${AUTHOR} ${COMMITTER}" ;;
  esac

  export ALL
  export OLD_EMAIL
  export CORRECT_EMAIL
  export CORRECT_NAME

  git filter-branch -f --env-filter "${FILTER}" \
  --tag-name-filter cat -- --branches --tags
}

parse_options() {
  while getopts ace:n:o:t: OPT; do
    case "${OPT}" in
      a) ALL=true ;;
      c) CONFIG=true ;;
      e) CORRECT_EMAIL="${OPTARG}" ;;
      n) CORRECT_NAME="${OPTARG}" ;;
      o) OLD_EMAIL="${OPTARG}" ;;
      t) TYPE="${OPTARG}" ;;
      ?) error ;;
    esac
  done

  shift $(( OPTIND - 1 ))

  if ${CONFIG}; then
    # use config values if not explicitly already defined
    [ -n "${CORRECT_EMAIL+x}" ] || CORRECT_EMAIL=$( git config user.email )
    [ -n "${CORRECT_NAME+x}" ] || CORRECT_NAME=$( git config user.name )
  fi
}

validate_options() {
  # Either OLD_EMAIL should be set or ALL should be true
  if [ -z "${OLD_EMAIL+x}" ] && ! ${ALL}; then
    msg="missing target of the rewrite"
    msg="${msg}\nuse either -o option or -a flag"
    error "${msg}"
  fi

  # OLD_EMAIL shouldn't be set if ALL is true as well to prevent misuse
  if [ -n "${OLD_EMAIL+x}" ] && ${ALL}; then
    msg="ambiguous target of the rewrite"
    msg="${msg}\nuse either -o option or -a flag"
    error "${msg}"
  fi

  # CORRECT_NAME should be either unset or set to non-empty string
  [ -n "${CORRECT_NAME-x}" ] || error "empty name is not allowed"

  # Either CORRECT_EMAIL or CORRECT_NAME should be set
  if [ -z "${CORRECT_EMAIL+x}" ] && [ -z "${CORRECT_NAME+x}" ]; then
    msg="missing correct email and/or name to set"
    msg="${msg}\nuse -e and/or -n options"
    msg="${msg}\nor -c flag with user values set in Git config"
    error "${msg}"
  fi

  # TYPE should be a valid identifier
  if [ "${TYPE}" != 'both' ] \
     && [ "${TYPE}" != 'author' ] \
     && [ "${TYPE}" != 'committer' ]; then
    error "invalid type '${TYPE}'"
  fi
}

init_variables
parse_options "$@"
validate_options

reauthor
