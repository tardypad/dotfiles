# Control structures

snippet if "PHP 'if' control structure" b
if (${1})
{
    ${VISUAL}${0}
}
endsnippet

snippet elseif "PHP 'elseif' control structure" b
elseif (${1})
{
    ${VISUAL}${0}
}
endsnippet

snippet else "PHP 'else' control structure" b
else
{
    ${VISUAL}${0}
}
endsnippet

snippet while "PHP 'while' control structure" b
while (${1})
{
    ${VISUAL}${0}
}
endsnippet

snippet do "PHP 'do' control structure" b
do
{
    ${VISUAL}${0}
} while (${1})
endsnippet

snippet for "PHP 'for' control structure" b
for (${1:$i = 1}; ${2:$i <= 10}; ${3:$i++})
{
    ${VISUAL}${0}
}
endsnippet

snippet foreach "PHP 'foreach' control structure" b
foreach (${1} as ${2:$k => $v})
{
    ${VISUAL}${0}
}
endsnippet

snippet switch "PHP 'switch' control structure" b
switch (${1})
{
    case ${2}:
        ${0}
        break;
    default:
}
endsnippet

snippet try "PHP 'try/catch' control structure" b
try {
    ${VISUAL}${0}
}
catch (${1:\Exception} $e)
{
}
endsnippet

# Functions

snippet function_public "PHP public function" b
/**
 * ${3:undocumented function}
 *
 * @return ${4:void}
 */
public function ${1:name}(${2})
{
    ${VISUAL}${0}
}
endsnippet

snippet function_protected "PHP protected function" b
/**
 * ${3:undocumented function}
 *
 * @return ${4:void}
 */
protected function ${1:name}(${2})
{
    ${VISUAL}${0}
}
endsnippet

snippet function_private "PHP private function" b
/**
 * ${3:undocumented function}
 *
 * @return ${4:void}
 */
private function ${1:name}(${2})
{
    ${VISUAL}${0}
}
endsnippet

# Properties

snippet property_public "PHP public property" b
/**
 * ${2:undocumented property}
 * @var ${3:void}
 */
public \$${1:name};
${0}
endsnippet

snippet property_protected "PHP protected property" b
/**
 * ${2:undocumented property}
 * @var ${3:void}
 */
protected \$${1:name};
${0}
endsnippet

snippet property_private "PHP private property" b
/**
 * ${2:undocumented property}
 * @var ${3:void}
 */
private \$${1:name};
${0}
endsnippet

# Misc

snippet const "PHP constant" b
/**
 * ${3:undocumented constant}
 * @var ${4:void}
 */
const ${1:NAME} = ${2:0};
${0}
endsnippet
