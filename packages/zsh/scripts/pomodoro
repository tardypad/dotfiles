#!/bin/sh

init_variables() {
  COMMAND=${0##*/}

  FILE_PATH="${XDG_RUNTIME_DIR}/pomodoro"
  DURATION_SECONDS=1500

  ACTION=
}

usage() {
  cat <<- EOF
	usage: ${COMMAND} [<options>] <action>

	Manage a Pomodoro session

	Options:
	  -h,  --help    show this message only

	Actions:
	  start cancel toggle status
	EOF
}

error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  echo "Try '${COMMAND} --help' for more information."
  exit 1
} >&2

current_time_sec() {
  # values with leading 0 are interpreted as octals
  # which leads to issue with "08" and "09"
  CUR_HOURS=$( date +%H )
  CUR_MINUTES=$( date +%M )
  CUR_SECONDS=$( date +%S )
  echo $((
    ${CUR_HOURS#0} * 3600 + ${CUR_MINUTES#0} * 60 + ${CUR_SECONDS#0}
  ))
}

session_start() {
  CURRENT_TIME=$( current_time_sec )
  echo "${CURRENT_TIME}" > "${FILE_PATH}"

  ( sleep "${DURATION_SECONDS}" && session_end "${CURRENT_TIME}" )&
}

session_status() {
  is_session_started || return 1

  CURRENT_TIME=$( current_time_sec )
  START_TIME=$( cat "${FILE_PATH}" )
  MINUTES_LEFT=$((
    ( DURATION_SECONDS - (CURRENT_TIME - START_TIME) ) / 60
  ))

  echo "${MINUTES_LEFT} min left"
}

session_cancel() {
  is_session_started || return 1

  rm -f "${FILE_PATH}"
}

session_toggle() {
  if is_session_started; then
    session_cancel
  else
    session_start
  fi
}

session_end() {
  is_session_started || return 1

  SESSION_START_TIME="$1"
  CURRENT_START_TIME=$( cat "${FILE_PATH}" )

  # only end session if no newer one was created
  if [ "${SESSION_START_TIME}" = "${CURRENT_START_TIME}" ]; then
    rm -rf "${FILE_PATH}"
    notify_end_pomodoro
  fi
}

is_session_started() {
  [ -f "${FILE_PATH}" ]
}

parse_options() {
  while [ "$#" -gt 0 ]; do
    case "$1" in
      -h|--help)
        usage
        exit 0
        ;;
      *)
        break 2
        ;;
    esac
  done

  ACTION="$1"
}

validate_options() {
  if [ -z "${ACTION}" ]; then
    error 'Missing action argument'
  fi

  if [ "${ACTION}" != 'start' ] \
     && [ "${ACTION}" != 'cancel' ] \
     && [ "${ACTION}" != 'toggle' ] \
     && [ "${ACTION}" != 'status' ]; then
    error "Invalid action '${ACTION}'"
  fi
}

init_variables
parse_options "$@"
validate_options

"session_${ACTION}"
