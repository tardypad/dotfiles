#!/bin/sh
# commands used:
# - mysql

init_variables() {
  COMMAND=${0##*/}

  ENV_DIR_PATH="${XDG_DATA_HOME:-$HOME/.local/share}/env/mysql"

  PROJECT=
  QUERY=

  if [ -t 1 ]; then
    MYSQL_OPTIONS='--raw --column-names'
  else
    MYSQL_OPTIONS='--raw --batch --skip-column-names'
  fi

  ENV_PATH=
}

usage() {
  cat <<- EOF
	usage: ${COMMAND} [<options>] project [query]

	Start MySQL or run a query within a project environment

	Options:
	  -h    show this message only

	  All available mysql options can be used there too
	  using an = for the ones needing a parameter (space not supported)
	EOF
}

error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  echo "Try '${COMMAND} -h' for more information."
  exit 1
} >&2

run_mysql() {
  if [ -z "${QUERY}" ]; then
    mysql $( cat "${ENV_PATH}" ) ${MYSQL_OPTIONS}
  else
    mysql $( cat "${ENV_PATH}" ) ${MYSQL_OPTIONS} -e "${QUERY}"
  fi
}

parse_options() {
  while getopts h OPT; do
    case "${OPT}" in
      h) usage; exit 0 ;;
      ?) error ;;
    esac
  done

  shift $(( OPTIND - 1 ))

  PROJECT="$1"
  shift 2> /dev/null

  while [ "$#" -gt 0 ] && [ "$1" != '--' ]; do
    QUERY="${QUERY} $1"
    shift
  done

  shift 2> /dev/null
  MYSQL_OPTIONS="$*"
}

validate_options() {
  if [ -z "${PROJECT}" ]; then
    error 'missing project'
  fi

  ENV_PATH="${ENV_DIR_PATH}/${PROJECT}"

  if [ ! -f "${ENV_PATH}" ]; then
    error 'invalid project'
  fi
}

init_variables
parse_options "$@"
validate_options

run_mysql
