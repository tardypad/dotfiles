#!/bin/sh

init_variables() {
  COMMAND=${0##*/}

  FILE_PATH="${XDG_RUNTIME_DIR}/do_not_disturb"

  ACTION=
}

usage() {
  cat <<- EOF
	usage: ${COMMAND} [<options>] <action>

	Manage "Do not disturb" mode

	Options:
	  -h,  --help    show this message only

	Actions:
	  enable disable toggle status
	EOF
}

error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  echo "Try '${COMMAND} --help' for more information."
  exit 1
} >&2

dnd_enable() {
  echo '/slack away' | weechat-fifo 2> /dev/null &

  ssh status busy 'Do not disturb' 2> /dev/null &

  # function return value from file creation
  touch "${FILE_PATH}"
}

dnd_disable() {
  echo '/slack back' | weechat-fifo 2> /dev/null &

  ssh status available 2> /dev/null &

  # function return value from file deletion
  rm -f "${FILE_PATH}"
}

dnd_status() {
  if is_dnd_enabled; then
    echo 'enabled'
  else
    echo 'disabled'
  fi
}

dnd_toggle() {
  if is_dnd_enabled; then
    dnd_disable
  else
    dnd_enable
  fi
}

is_dnd_enabled() {
  [ -f "${FILE_PATH}" ]
}

parse_options() {
  while [ "$#" -gt 0 ]; do
    case "$1" in
      -h|--help)
        usage
        exit 0
        ;;
      *)
        break 2
        ;;
    esac
  done

  ACTION="$1"
}

validate_options() {
  if [ -z "${ACTION}" ]; then
    error 'Missing action argument'
  fi

  if [ "${ACTION}" != 'enable' ] \
     && [ "${ACTION}" != 'disable' ] \
     && [ "${ACTION}" != 'toggle' ] \
     && [ "${ACTION}" != 'status' ]; then
    error "Invalid action '${ACTION}'"
  fi
}

init_variables
parse_options "$@"
validate_options

"dnd_${ACTION}"
