#!/bin/sh

init_variables() {
  COMMAND=${0##*/}

  RUN_COMMAND=
  COUNT=
  INTERVAL=0
  TIME=
}


usage() {
  cat <<- EOF
	usage: ${COMMAND} [<options>] command

	Execute a command in a loop

	Options:
	  -c,  --count     COUNT      stops after COUNT runs of the command
	  -h,  --help                 show this message only
	  -i,  --interval  INTERVAL   wait INTERVAL seconds between each command run
	                              default is 0, floating number are accepted
	  -t,  --time      TIME       stops command runs after a TIME seconds period
	EOF
}


error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  echo "Try '${COMMAND} --help' for more information."
  exit 1
} >&2


current_time_sec() {
  # values with leading 0 are interpreted as octals
  # which leads to issue with "08" and "09"
  CUR_HOURS=$( date +%H )
  CUR_MINUTES=$( date +%M )
  CUR_SECONDS=$( date +%S )
  echo $((
    ${CUR_HOURS#0} * 3600 + ${CUR_MINUTES#0} * 60 + ${CUR_SECONDS#0}
  ))
}


loop_command() {
    [ -n "${TIME}" ] && END_TIME=$(( $( current_time_sec ) + TIME ))

    RUN_COUNT=0

    while true; do
      eval "${RUN_COMMAND}"

      RUN_COUNT=$(( RUN_COUNT + 1 ))

      [ -n "${TIME}" ] && [ "$( current_time_sec )" -ge "${END_TIME}" ] && return 0
      [ -n "${COUNT}" ] && [ "${RUN_COUNT}" -ge "${COUNT}" ] && return 0

      sleep "${INTERVAL}"
    done
}


parse_options() {
  while [ "$#" -gt 0 ]; do
    case "$1" in
      -c|--count)
        [ -n "$2" ] || error 'Missing --count value'
        COUNT="$2"
        shift 2
        ;;
      -h|--help)
        usage
        exit 0
        ;;
      -i|--interval)
        [ -n "$2" ] || error 'Missing --interactive value'
        INTERVAL="$2"
        shift 2
        ;;
      -t|--time)
        [ -n "$2" ] || error 'Missing --time value'
        TIME="$2"
        shift 2
        ;;
      *)
        break 2
        ;;
    esac
  done

  RUN_COMMAND="$*"
}


validate_options() {
  if [ -z "${COUNT}" ] && [ -z "${TIME}" ]; then
    error 'you must specify at least --count or --time options'
  fi

  case "${COUNT}" in
    *[!0-9]*) error 'count must be an integer' ;;
  esac

  case "${TIME}" in
    *[!0-9]*) error 'time must be an integer' ;;
  esac

  case "${INTERVAL}" in
    *[!0-9.]*) error 'interval must be an number' ;;
  esac

  if [ -z "${RUN_COMMAND}" ]; then
    error 'no command to run'
  fi
}


init_variables
parse_options "$@"
validate_options

loop_command
