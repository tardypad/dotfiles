#!/usr/bin/env zsh

COMMAND=${0:t}

init_variables() {
  AVAILABLE_EMOJIS=(
    'fliptable'
    'cool'
    'shrug'
    'disapprove'
    'happygary'
  )

  NAME=
  EXTRA=
}


usage() {
  cat << EOF
usage: ${COMMAND} [<options>] name [extra]

Animate an emoji
Some supports an extra optional text argument

Options:
  -h,  --help    show this message only

Available emojis name: ${AVAILABLE_EMOJIS}
EOF
}


error() {
  [[ -z "$1" ]] || echo "${COMMAND}: $1" >&2
  echo "Try '${COMMAND} --help' for more information."
  exit 1
}


frame() {
  # put some whitespaces before
  # so that the cursor is not over the display
  echo -ne "    $1\033[0K\r"
  sleep 0.2
}


emoji_fliptable() {
  local text="$1"

  if [[ -n "${text}" ]]; then
    local upside_down_text=$( upside_down ${text} )

    frame "( °-°) ${text}"
    frame "( °-°) ${text}"
    frame "( °-°) ${text}"
    frame "( °-°) ${text}"
    frame "( °□°) ${text}"
    frame "(╯°□°)╯${text}"
    frame "(╯°□°)╯︵ ${upside_down_text}"
    frame "(╯°□°)╯        ${upside_down_text}"
    frame "(╯°□°)╯           ${upside_down_text}"
  else
    frame '( °-°) ┬─┬'
    frame '( °-°) ┬─┬'
    frame '( °-°) ┬─┬'
    frame '( °-°) ┬─┬'
    frame '( °□°) ┬─┬'
    frame '(╯°□°)╯┬─┬'
    frame '(╯°□°)╯︵ ┻━┻'
    frame '(╯°□°)╯        ┻━┻'
    frame '(╯°□°)╯           ┻━┻'
  fi

  echo
}


emoji_cool() {
  frame '( •_•)'
  frame '( •_•)'
  frame '( •_•)'
  frame '( •_•)'
  frame '( •_•)     ⌐■-■'
  frame '( •_•)   ⌐■-■'
  frame '( •_•)>⌐■-■'
  frame '(⌐■_■)'
  echo
}


emoji_shrug() {
  frame '_╭-(ツ)-╮_'
  frame '_╭-(ツ)-╮_'
  frame '_╭-(ツ)-╮_'
  frame '_╭-(ツ)-╮_'
  frame '¯\_(ツ)_/¯'
  echo
}


emoji_disapprove() {
  frame 'ʘ‿ʘ'
  frame 'ʘ‿ʘ'
  frame 'ʘ‿ʘ'
  frame 'ʘ‿ʘ'
  frame 'ʘ_ʘ'
  frame 'ʘ_ʘ'
  frame 'ಠ_ಠ'
  echo
}


emoji_happygary() {
  frame 'ᕕ(ᐛ)ᕗ'
  frame 'ᕕ(ᐛ)ᕗ'
  frame 'ᕙ(ᐖ)ᕡ'
  frame 'ᕙ(ᐖ)ᕡ'
  frame 'ᕕ(ᐛ)ᕗ'
  frame 'ᕕ(ᐛ)ᕗ'
  frame 'ᕙ(ᐖ)ᕡ'
  frame 'ᕙ(ᐖ)ᕡ'
  frame 'ᕕ(ᐛ)ᕗ'
  echo
}



parse_options() {
  while [[ "$#" -gt 0 ]]; do
    case "$1" in
      -h|--help)
        usage
        exit 0
        ;;
      *)
        break 2
        ;;
    esac
  done

  NAME="$1"
  EXTRA="${@:2}"
}


validate_options() {
  if [[ -z "${NAME}" ]]; then
    error 'missing emoji name'
  fi

  if ! (( ${AVAILABLE_EMOJIS[(Ie)${NAME}]} )); then
    error "invalid emoji name ${NAME}"
  fi
}


init_variables
parse_options "$@"
validate_options

emoji_$NAME $EXTRA
