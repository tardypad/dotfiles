#!/bin/sh
# commands used:
# - column
# - fzf
# - stat
# - zsh

init_variables() {
  COMMAND=${0##*/}

  CACHE_TOPICS_PATH="${XDG_CACHE_HOME:-$HOME/.cache}/help_topics"
  ZSH_VERSION=$( zsh --version | cut -d ' ' -f 2 )
  ZSH_HELPDIR="/usr/share/zsh/${ZSH_VERSION}/help"
  MAN_DIRS='/usr/share/man/man*'

  TOPIC=
  SECTION=
}

error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  exit 1
} >&2

select_section()
{
  SECTIONS=

  # zsh section
  if [ -f "${ZSH_HELPDIR}/${TOPIC}" ]; then
    SECTIONS="${SECTIONS}:zsh"
  fi

  # man sections
  SECTIONS="${SECTIONS}:$(
    find -L ${MAN_DIRS} -type f -name "${TOPIC}.[0-9]*" \
      | sed 's/.*\.\([^.]*\).gz/\1/' \
      | tr '\n' ':'
  )"

  # don't show menu if there is not at least 2 sections
  if [ "$( echo "${SECTIONS}" | tr ':' '\n' | grep -c '.' )" -lt 2 ]; then
    return 0
  fi

  # manual menu building
  # order of displayed sections is the order of help lookup
  # for example: zsh / 1 / 1p / 3
  echo 'Available help pages:'
  echo "${SECTIONS}" \
    | tr ':' '\n' \
    | grep '.' \
    | while read -r ITEM; do
        echo "${ITEM})@$( section_name "${ITEM}" )"
      done \
    | column -t -s '@' \
    | sort -n
  printf 'Select section (empty for default): '

  read -r SECTION
}

section_name() {
  case "$1" in
    zsh) echo 'ZSH help' ;;
    0p) echo 'Header files (POSIX)' ;;
    0*) echo 'Header files';;
    1p) echo 'General commands (POSIX)' ;;
    1*) echo 'General commands' ;;
    2*) echo 'System functions' ;;
    3*) echo 'Library functions' ;;
    4*) echo 'Special files' ;;
    5*) echo 'File formats and conventions' ;;
    6*) echo 'Games' ;;
    7*) echo 'Miscellaneous' ;;
    8*) echo 'System administration commands' ;;
    9*) echo 'Kernel routines' ;;
  esac
}

search_help() {
  if [ -z "${SECTION}" ] || [ "${SECTION}" = 'zsh' ]; then
    if [ -f "${ZSH_HELPDIR}/${TOPIC}" ]; then
      "${PAGER}" "${ZSH_HELPDIR}/${TOPIC}"
      return 0
    fi
  fi

  if [ -z "${SECTION}" ]; then
    if [ "$( find -L ${MAN_DIRS} -type f -name "${TOPIC}.[0-9]*" \
              | wc -l )" -ge 1 ]; then \
      man "${TOPIC}"
      return 0
    fi

    if "${TOPIC}" --help > /dev/null 2>&1; then
      "${TOPIC}" --help | "${PAGER}"
      return 0
    fi

    echo "no help available for '${TOPIC}'"

  else
    if [ "$( find -L ${MAN_DIRS} -type f -name "${TOPIC}.${SECTION}.*" \
              | wc -l )" -ge 1 ]; then \
      man "${TOPIC}.${SECTION}"
      return 0
    fi

    echo "no help available for '${TOPIC}' section '${SECTION}'"
  fi

  return 1
}

should_build_topics_cache() {
  [ -f "${CACHE_TOPICS_PATH}" ] || return 0

  CACHE_LAST_MODIFIED=$(
    stat -c '%Y' "${CACHE_TOPICS_PATH}"
  )

  FOLDERS_LAST_MODIFIED=$(
    {
      printf '%s' "${PATH}" | tr ':' '\n';
      echo "${ZSH_HELPDIR}";
      find -L ${MAN_DIRS} -type d;
    } \
    | xargs -I {} -- stat -c '%Y' {}  2> /dev/null \
    | sort \
    | tail -n 1
  )

  [ "${CACHE_LAST_MODIFIED}" -lt "${FOLDERS_LAST_MODIFIED}" ]
}

build_topics_cache() {
  mkdir -p "$( dirname "${CACHE_TOPICS_PATH}" )"

  PATH_COMMANDS=$(
    printf '%s' "${PATH}" \
      | tr ':' '\n' \
      | xargs -I '[]' \
        -- find -L '[]' \
           -type f \
           -exec basename {} \; \
           2> /dev/null
  )

  ZSH_HELP_TOPICS=$( ls "${ZSH_HELPDIR}" )

  MAN_TOPICS=$(
    find -L ${MAN_DIRS} -type f \
      | sed 's#.*/\([^/]*\)\.[^\.]*\.gz#\1#'
  )

  {
    echo "${PATH_COMMANDS}";
    echo "${ZSH_HELP_TOPICS}";
    echo "${MAN_TOPICS}";
  } \
  | sort -u \
  > "${CACHE_TOPICS_PATH}"
}

select_topic() {
  should_build_topics_cache && build_topics_cache

  TOPIC=$(
    fzf --layout=reverse \
        --no-multi \
        --height=10 \
      < "${CACHE_TOPICS_PATH}"
  )
}

parse_options() {
  TOPIC="$1"
  SECTION="$2"
}

init_variables
parse_options "$@"

if [ -z "${TOPIC}" ]; then
  select_topic
fi

[ -z "${TOPIC}" ] && exit 0

if [ -z "${SECTION}" ]; then
  select_section
fi

search_help
