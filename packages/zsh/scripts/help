#!/bin/sh

init_variables() {
  COMMAND=${0##*/}

  CACHE_TOPICS_PATH="${XDG_CACHE_HOME:-$HOME/.cache}/help_topics"
  ZSH_VERSION=$( zsh --version | cut -d ' ' -f 2 )
  ZSH_HELPDIR="/usr/share/zsh/${ZSH_VERSION}/help"
  MAN_DIR='/usr/share/man'

  TOPIC=
}

usage() {
  cat <<- EOF
	usage: ${COMMAND} [<options>] [<topic>]

	Get help about a topic

	Options:
	  -h,  --help           show this message only
	EOF
}

error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  echo "Try '${COMMAND} --help' for more information."
  exit 1
} >&2

options_selection()
{
  OPTIONS=

  # zsh option
  if [ -f "${ZSH_HELPDIR}/${TOPIC}" ]; then
    OPTIONS="${OPTIONS}:zsh"
  fi

  # man options
  OPTIONS="${OPTIONS}:$(
    find -L "${MAN_DIR}" -type f -name "${TOPIC}.*" \
      | sed 's/.*\.\([^.]*\).gz/\1/'
  )"

  # don't show menu if there is not at least 2 options
  if [ "$( echo "${OPTIONS}" | grep -c '.' )" -lt 2 ]; then
    return 0
  fi

  # manual menu building
  # order of displayed options is the order of help lookup
  # for example: zsh / 1 / 1p / 3
  echo 'Available help pages:'
  echo "${OPTIONS}" \
    | tr ':' '\n' \
    | grep '.' \
    | while read -r OPTION; do
        echo "${OPTION})@$( section_name "${OPTION}" )"
      done \
    | column -t -s '@' \
    | sort -n
  printf 'Select option (empty for default): '

  read -r SELECTED_OPTION

  # ZSH help is the default page displayed
  if [ -n "${SELECTED_OPTION}" ] \
     && [ "${SELECTED_OPTION}" != 'zsh' ]; then
    TOPIC="${TOPIC}.${SELECTED_OPTION}"
  fi
}

section_name() {
  SECTION="$1"

  case "${SECTION}" in
    zsh) echo 'ZSH help' ;;
    0p) echo 'Header files (POSIX)' ;;
    0*) echo 'Header files';;
    1p) echo 'General commands (POSIX)' ;;
    1*) echo 'General commands' ;;
    2*) echo 'System functions' ;;
    3*) echo 'Library functions' ;;
    4*) echo 'Special files' ;;
    5*) echo 'File formats and conventions' ;;
    6*) echo 'Games' ;;
    7*) echo 'Miscellaneous' ;;
    8*) echo 'System administration commands' ;;
    9*) echo 'Kernel routines' ;;
  esac
}

search_help() {
  if [ -f "${ZSH_HELPDIR}/${TOPIC}" ]; then
    "${PAGER}" "${ZSH_HELPDIR}/${TOPIC}"
    return 0
  fi

  if [ "$( find -L "${MAN_DIR}" -type f -name "${TOPIC}.*" \
            | wc -l )" -ge 1 ]; then \
    man "${TOPIC}"
    return 0
  fi

  if "${TOPIC}" --help > /dev/null 2>&1; then
    "${TOPIC}" --help | "${PAGER}"
    return 0
  fi

  echo "no help available for '${TOPIC}'"
  return 1
}

should_build_topics_cache() {
  [ -f "${CACHE_TOPICS_PATH}" ] || return 0

  CACHE_LAST_MODIFIED=$(
    stat -c '%Y' "${CACHE_TOPICS_PATH}"
  )

  FOLDERS_LAST_MODIFIED=$(
    {
      printf '%s' "${PATH}" | tr ':' '\n';
      echo "${ZSH_HELPDIR}";
      find -L "${MAN_DIR}" -type d;
    } \
    | xargs -I {} -- stat -c '%Y' {}  2> /dev/null \
    | sort \
    | tail -n 1
  )

  [ "${CACHE_LAST_MODIFIED}" -lt "${FOLDERS_LAST_MODIFIED}" ]
}

build_topics_cache() {
  mkdir -p "$( dirname "${CACHE_TOPICS_PATH}" )"

  PATH_COMMANDS=$(
    printf '%s' "${PATH}" \
      | tr ':' '\n' \
      | xargs -I '[]' \
        -- find -L '[]' \
           -type f \
           -exec basename {} \; \
           2> /dev/null
  )

  ZSH_HELP_TOPICS=$( ls "${ZSH_HELPDIR}" )

  MAN_TOPICS=$(
    find -L "${MAN_DIR}" -type f \
      | sed 's#.*/\([^/]*\)\.[^\.]*\.gz#\1#'
  )

  {
    echo "${PATH_COMMANDS}";
    echo "${ZSH_HELP_TOPICS}";
    echo "${MAN_TOPICS}";
  } \
  | sort -u \
  > "${CACHE_TOPICS_PATH}"
}

select_topic() {
  should_build_topics_cache && build_topics_cache

  TOPIC=$(
    fzf --layout=reverse \
        --no-multi \
        --height=10 \
      < "${CACHE_TOPICS_PATH}"
  )
}

parse_options() {
  while [ "$#" -gt 0 ]; do
    case "$1" in
      -h|--help)
        usage
        exit 0
        ;;
      *)
        break 2
        ;;
    esac
  done

  TOPIC="$1"
}

init_variables
parse_options "$@"

if [ -z "${TOPIC}" ]; then
  select_topic
fi

[ -z "${TOPIC}" ] && exit 0

options_selection
search_help
