#!/bin/sh

init_variables() {
  COMMAND=${0##*/}

  ENV_DIR_PATH="${XDG_CONFIG_HOME:-$HOME/.config}/tmux/env/"

  BACKGROUND=false

  TARGET=
  SESSION=
}


usage() {
  cat <<- EOF
	usage: ${COMMAND} [<options>] <target> [<session>]

	Start target tmux environment session
	If no session is defined, a new empty one is created

	Options:
	  -b,  --background     launch in background, no attach
	  -h,  --help           show this message only
	EOF
}


error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  echo "Try '${COMMAND} --help' for more information."
  exit 1
} >&2


is_session_present() {
  tmux -L "${TARGET}" list-sessions -F '#{session_name}' 2> /dev/null \
    | grep -q "^${SESSION}$"
}


start_target_tmux_env() {
  if [ -n "${SESSION}" ]; then
    if ! is_session_present; then
      SCRIPT_PATH="${ENV_DIR_PATH}/${TARGET}/${SESSION}.sh"
      TMUX_ENV=yes zsh "${SCRIPT_PATH}" "${TARGET}" "${SESSION}"
    fi
  else
    SESSION='new'
    if ! is_session_present; then
      TMUX_ENV=yes tmux -L "${TARGET}" new-session -d -s "${SESSION}"
    fi
  fi

  if ! $BACKGROUND; then
    tmux -L "${TARGET}" attach-session -t "${SESSION}" > /dev/null 2>&1
  else
    tmux -L "${TARGET}" switch-client -t "${SESSION}" > /dev/null 2>&1
  fi
}


parse_options() {
  while [ "$#" -gt 0 ]; do
    case "$1" in
      -b|--background)
        BACKGROUND=true
        shift
        ;;
      -h|--help)
        usage
        exit 0
        ;;
      *)
        break 2
        ;;
    esac
  done

  TARGET="$1"
  SESSION="$2"
}


validate_options() {
  if [ -n "${TMUX}" ]; then
    error "nested tmux env is not allowed"
  fi

  if [ -z "${TARGET}" ]; then
    error 'missing target'
  fi

  if [ ! -d "${ENV_DIR_PATH}/${TARGET}" ]; then
    error "invalid target ${TARGET}"
  fi

  if [ -n "${SESSION}" ] \
     && [ ! -f "${ENV_DIR_PATH}/${TARGET}/${SESSION}.sh" ]; then
    error "invalid target's session ${SESSION}"
  fi
}


init_variables
parse_options "$@"
validate_options

start_target_tmux_env
