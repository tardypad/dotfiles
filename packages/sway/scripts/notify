#!/bin/sh

init_variables() {
  COMMAND=${0##*/}

  SUMMARY=
  BODY=
  CATEGORY=
  EXPIRE_TIME=0
  HINTS='{}'

  # unused as parameters
  APP_NAME=
  REPLACE_ID=0
  ICON=
  ACTIONS='[]'
}

usage() {
  cat <<- EOF
	usage: ${COMMAND} [<options>] summary [body]

	Send a notification

	Options:
	  -c,  --category CATEGORY  notification category
	  -h,  --help               show this message only
	  -t,  --expire-time TIME   timeout in seconds
	EOF
}

error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  printf "Try '%s --help' for more information.\n" "${COMMAND}"
  exit 1
} >&2

send_notification() {
  if [ -n "${CATEGORY}" ]; then
    HINTS="{\"category\":<string \"${CATEGORY}\">}"
  fi

  gdbus call \
    --session \
    --dest org.freedesktop.Notifications \
    --object-path /org/freedesktop/Notifications \
    --method org.freedesktop.Notifications.Notify \
    "${APP_NAME}" \
    "${REPLACE_ID}" \
    "${ICON}" \
    "${SUMMARY}" \
    "${BODY}" \
    "${ACTIONS}" \
    "${HINTS}" \
    "int32 $(( EXPIRE_TIME * 1000 ))" \
  > /dev/null
}

parse_options() {
  while [ "$#" -gt 0 ]; do
    case "$1" in
      -c|--category)
        [ -n "$2" ] || error 'Missing --category value'
        CATEGORY="$2"
        shift 2
        ;;
      -h|--help)
        usage
        exit 0
        ;;
      -t|--expire-time)
        [ -n "$2" ] || error 'Missing --expire-time value'
        EXPIRE_TIME="$2"
        shift 2
        ;;
      *)
        break 2
        ;;
    esac
  done

  SUMMARY="$1"
  BODY="$2"
}

validate_options() {
  if [ -z "${SUMMARY}" ]; then
    error 'missing summary argument'
  fi

  if ! echo "${EXPIRE_TIME}" | grep -E -q '^[0-9]*$'; then
    error 'expire time must be a number'
  fi
}

init_variables
parse_options "$@"
validate_options

send_notification
