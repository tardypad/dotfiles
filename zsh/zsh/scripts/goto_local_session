#!/usr/bin/env zsh

COMMAND=${0:t}

init_variables() {
  KONSOLE_TAB_NAME='Local'
  TMUX_SOCKET_NAME='local'
  TMUX_SESSION_NB=
}


usage() {
  cat << EOF
usage: ${COMMAND} [<options>] <session_nb>

Go to a local tmux session in konsole environment

Options:
  -h,  --help     show this message only
EOF
}


error() {
  if [[ -n "$1" ]]; then
    echo "error: $1" >&2
  fi
  usage
  exit 1
}


get_konsole() {
  for service in $( qdbus 'org.kde.konsole*' ); do
    local app_name=$(
      qdbus "${service}" /MainApplication org.qtproject.Qt.QCoreApplication.applicationName
    )

    if [[ "${app_name}" == 'konsole_env' ]]; then
        echo "${service}"
        return
    fi
  done
}


activate_konsole_window() {
  local qdbus_service="$1"

  command -v xdotool &> /dev/null || return

  local window_id=$(
    qdbus "${qdbus_service}" /konsole/MainWindow_1 org.kde.KMainWindow.winId
  )
  xdotool windowactivate "${window_id}" &> /dev/null
}


switch_konsole_tab() {
  local qdbus_service="$1"
  local target_tab_name="$2"

  for id in $(qdbus "${qdbus_service}" /Windows/1 org.kde.konsole.Window.sessionList); do
    local tab_name=$(
      qdbus "${qdbus_service}" "/Sessions/${id}" org.kde.konsole.Session.title 1
    )

    if [[ "${tab_name}" =~ ".*${target_tab_name}.*" ]]; then
      qdbus "${qdbus_service}" /Windows/1 org.kde.konsole.Window.setCurrentSession "${id}" &> /dev/null
      return
    fi
  done
}


switch_tmux_session() {
  local socket_name="$1"
  local session_nb="$2"

  tmux -L "${socket_name}" switch-client -t "${session_nb}-" &> /dev/null
}


goto_local_session() {
  qdbus_service=$( get_konsole )

  [[ -n "${qdbus_service}" ]] || return

  switch_konsole_tab "${qdbus_service}" "${KONSOLE_TAB_NAME}"
  switch_tmux_session "${TMUX_SOCKET_NAME}" "${TMUX_SESSION_NB}"
  activate_konsole_window "${qdbus_service}"
}


parse_options() {
  while [[ "$#" -gt 0 ]]; do
    case "$1" in
      -h|--help)
        usage
        exit 0
        ;;
      *)
        break 2
        ;;
    esac
  done

  TMUX_SESSION_NB="$1"
}


validate_options() {
  # validate that TMUX_SESSION_NB is defined
  if [[ -z "${TMUX_SESSION_NB}" ]]; then
    error "missing session number"
  fi

  # validate that TMUX_SESSION_NB is a number
  if ! [[ "${TMUX_SESSION_NB}" =~ '^[0-9]+$' ]]; then
    error "invalid session number '${TMUX_SESSION_NB}'"
  fi
}

init_variables
parse_options "$@"
validate_options

goto_local_session
