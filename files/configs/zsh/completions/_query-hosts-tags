#compdef query-hosts-tags

local hosts_tags_files=(
  "${XDG_DATA_HOME:-$HOME/.local/share}"/hosts_tags*.yaml
)

# exit completion if no file present
(( ${#hosts_tags_files[@]} )) || return 1

_query_types() {
    declare -a types
    types=(
      'tags: list tags from the host argument'
      'hosts: list hosts matching tags arguments'
    )
    _describe 'query type' types
}

_hosts_tags() {
  local ignore_tag ignore_tags='@@@'

  for ((i = 3; i <= CURRENT; i++)); do
    ignore_tag=$( echo $words[$i] | sed 's/\([^=]*\)=.*/\1/' )
    ignore_tags="${ignore_tags}|^${ignore_tag}$"
  done

  compadd -qS= $(
    {
      sed -n 's/^  \(.*\): .*/\1/p' ${hosts_tags_files};
      echo 'host';
    } \
      | sort -u \
      | grep -vE "'${ignore_tags}'"
  )
}

_tag_values() {
  local tag="$1"

  if [ "${tag}" = 'host' ]; then
    _hosts
    return;
  fi

  compadd $(
    sed -n "s/^  ${tag}: \(.*\)/\1/p" ${hosts_tags_files} \
      | sort -u
  )
}

_hosts() {
  compadd $(
    sed -n '/^[^ ]/s/\(.*\):/\1/p' ${hosts_tags_files} \
      | sort
  )
}

_args() {
  case $words[2] in
    tags)
      _hosts
      ;;
    hosts)
      if compset -P '*\='; then
        _tag_values ${IPREFIX%=}
      else
        _hosts_tags
      fi
      ;;
  esac
}

_arguments \
  '1:query type:_query_types' \
  '*:args:_args'
