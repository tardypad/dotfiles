#!/bin/sh

init_variables() {
  COMMAND=${0##*/}

  PROJECTS_DOC_DIR="${PROJECTS_DOC_DIR:-$HOME/Projects/docs}"
  PROJECTS_LOG_DIR="${PROJECTS_LOG_DIR:-$HOME/Projects/logs}"
  PROJECTS_REPO_DIR="${PROJECTS_REPO_DIR:-$HOME/Projects/repos}"

  TYPE=
  PROJECT=
}

parse_command_line() {
  TYPE="$1"
  PROJECT="$2"
}

validate_command_line() {
  if [ -z "${TYPE}" ]; then
    exit_error 'Missing type argument'
  fi

  if [ "${TYPE}" != 'main' ] \
     && [ "${TYPE}" != 'repo' ] \
     && [ "${TYPE}" != 'docs' ] \
     && [ "${TYPE}" != 'logs' ]; then
    exit_error "Invalid type '${TYPE}'"
  fi
}

exit_error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  exit 1
} >&2

get_project_path() {
  case "${TYPE}" in
    main)
      find "${PROJECTS_REPO_DIR}"/* \
        -type d -prune -name "${PROJECT}"
      ;;
    repo)
      find "${PROJECTS_REPO_DIR}"/*/* \
        -type d -prune -name "${PROJECT}"
      ;;
    docs)
      find "${PROJECTS_DOC_DIR}"/* \
        -type d -prune -name "${PROJECT}"
      ;;
    logs)
      find "${PROJECTS_LOG_DIR}"/* \
        -type d -prune -name "${PROJECT}"
      ;;
  esac
}

get_type_path() {
  case "${TYPE}" in
    main) echo "${PROJECTS_REPO_DIR}" ;;
    repo) echo "${PROJECTS_REPO_DIR}" ;;
    docs) echo "${PROJECTS_DOC_DIR}" ;;
    logs) echo "${PROJECTS_LOG_DIR}" ;;
  esac
}

display_path() {
  if [ -n "${PROJECT}" ]; then
    PROJECT_PATH="$( get_project_path )"
  else
    PROJECT_PATH="$( get_type_path )"
  fi

  if [ -z "${PROJECT_PATH}" ]; then
    echo 'No such project path' >&2
    return 1
  fi

  echo "${PROJECT_PATH}"
}

init_variables
parse_command_line "$@"
validate_command_line

display_path
