#!/bin/sh

init_variables() {
  COMMAND=${0##*/}

  PERIOD='day'
  DATE=
  FINAL_DATE=
}

parse_command_line() {
  while getopts dmw OPT; do
    case "${OPT}" in
      d) PERIOD='day' ;;
      m) PERIOD='month' ;;
      w) PERIOD='week' ;;
      ?) exit_error ;;
    esac
  done

  shift $(( OPTIND - 1 ))

  [ -z "$1" ] || DATE="$1"
}

validate_command_line() {
  # shellcheck disable=SC2221 disable=SC2222
  case "$( echo "${DATE}" | tr '[:upper:]' '[:lower:]' )" in
    [+-][0-9]*)
      # months length are not regular: 31 Aug + 1 month should be September, not October
      if [ "${PERIOD}" = 'month' ]; then
        FINAL_DATE="$( date '+%Y/%m/%d' -d "$( date '+%Y/%m/01' ) ${DATE} ${PERIOD}" )"
      else
        FINAL_DATE="$( date '+%Y/%m/%d' -d "${DATE} ${PERIOD}" )"
      fi
      ;;
    jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)
      FINAL_DATE="$( date '+%Y/%m/%d' -d "01 ${DATE}" )"
      ;;
    january|february|march|april|may|june|july|august|september|october|november|december)
      FINAL_DATE="$( date '+%Y/%m/%d' -d "01 ${DATE}" )"
      ;;
    *)
      FINAL_DATE="$( date '+%Y/%m/%d' -d "${DATE}" )"
      ;;
  esac 2> /dev/null

  if [ -z "${FINAL_DATE}" ]; then
    exit_error "Invalid date '${DATE}'"
  fi
}

exit_error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  exit 1
} >&2

schedule_day() {
  rem -s -b1 "${FINAL_DATE}" \
    | grep "${FINAL_DATE}" \
    | sed 's/COLOR .* \([0-9]\{1,3\}\) \([0-9]\{1,3\}\) \([0-9]\{1,3\}\) \(.*\)/* * * * \4 COLOR:\1;\2;\3/' \
    | cut -d' ' -f6- \
    | sed -e 's/\(.*\) (.*)$/\1/' \
          -e 's/\(.*\) (.*) \(COLOR:.*\)/\1 \2/' \
          -e '/^[0-9]/s/ /\t/' \
          -e '/^[^0-9]/s/^/\t@@@/' \
          -e 's/^\t@@@\(.*\) COLOR:\(.*\)$/@@@\x1b[38;2;\2m\1\x1b[0m/' \
          -e 's/\(.*\)\t\(.*\) COLOR:\(.*\)$/\x1b[38;2;\3m\1\t\2\x1b[0m/' \
    | column -t -s '	' \
    | sed 's/^ *//' \
    | awk '!found && /^@@@/ { print ""; found=1 } 1' \
    | sed 's/^@@@//'
}

schedule_week() {
  rem -cu+1 -@2 -b1 -m "${FINAL_DATE}"
}

schedule_month() {
  rem -cu1 -@2 -b1 -m "${FINAL_DATE}"
}

init_variables
parse_command_line "$@"
validate_command_line

"schedule_${PERIOD}"
