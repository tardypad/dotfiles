#!/bin/sh

init_variables() {
  COMMAND=${0##*/}

  LOCAL_HOST="$( uname -n )"

  LOCAL_BROWSER_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/qutebrowser"
  LOCAL_BOOKS_DIR="${XDG_BOOKS_DIR:-$HOME/Books}"
  LOCAL_CONTACTS_DIR="${XDG_CONTACTS_DIR:-$HOME/Contacts}"
  LOCAL_NOTES_DIR="${XDG_NOTES_DIR:-$HOME/Notes}"
  LOCAL_TIME_TRACKER_LOGS_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/time-tracker/logs"
  LOCAL_TODO_DIR="${XDG_TODO_DIR:-$HOME/Todo}"
  LOCAL_VIDEOS_DIR="${XDG_VIDEOS_DIR:-$HOME/Videos}"

  PHONE_HOST='hazelnut'
  PHONE_PICTURES_DIR='/home/nemo/Pictures/Camera'
  PHONE_VIDEOS_DIR='/home/nemo/Videos/Camera'
  PHONE_SIGNAL_DIR='/home/nemo/android_storage/Signal'
  PHONE_WHATSAPP_DIR='/home/nemo/android_storage/WhatsApp'

  HDD1_UUID='e89b95fd-8520-43c1-bebf-610c92176955'
  HDD2_UUID='204b2ecc-e3c3-497c-aa4a-c0421a2ddb4f'

  SERVER_HOST='chestnut'
  SERVER_BASE_DIR='backup'

  SERVER_BOOKMARKS_DIR="${SERVER_BASE_DIR}/bookmarks"
  SERVER_NOTES_DIR="${SERVER_BASE_DIR}/notes"
  SERVER_TIME_TRACKER_LOGS_DIR="${SERVER_BASE_DIR}/time_tracker_logs"
  SERVER_TODO_DIR="${SERVER_BASE_DIR}/todo"
  SERVER_PACKAGES_DIR="/srv/http/pkgs"
  SERVER_REPOSITORIES_DIR="repos"

  RSYNC='rsync -azh --mkpath --info=progress2'

  ACTION='backup'
  CHECK=false
  SOURCE=
  TARGET=
  ITEM=
}

init_hdd_variables() {
  HDD_BACKUP_DIR="${HDD_BASE_DIR}/Backup"

  HDD_BOOKMARKS_DIR="${HDD_BASE_DIR}/Bookmarks"
  HDD_BOOKS_DIR="${HDD_BASE_DIR}/Books"
  HDD_CONTACTS_DIR="${HDD_BASE_DIR}/Contacts"
  HDD_MESSAGES_DIR="${HDD_BASE_DIR}/Messages"
  HDD_NOTES_DIR="${HDD_BASE_DIR}/Notes"
  HDD_PICTURES_DIR="${HDD_BASE_DIR}/Pictures"
  HDD_VIDEOS_DIR="${HDD_BASE_DIR}/Videos"
  HDD_PACKAGES_DIR="${HDD_BASE_DIR}/Packages"
  HDD_REPOSITORIES_DIR="${HDD_BASE_DIR}/Repositories"
  HDD_TODO_DIR="${HDD_BASE_DIR}/Todo"
}

parse_command_line() {
  while getopts cr OPT; do
    case "${OPT}" in
      c) CHECK=true ;;
      r) ACTION='restore' ;;
      ?) exit_error ;;
    esac
  done

  shift $(( OPTIND - 1 ))

  SOURCE="$1"
  TARGET="$2"
  ITEM="$3"
}

validate_command_line() {
  if [ -z "${SOURCE}" ]; then
      exit_error "Missing source"
  fi

  if [ -z "${TARGET}" ]; then
      exit_error "Missing target"
  fi

  if [ "${ACTION}" = 'backup' ]; then
    validate_command_line_backup_source_target
  else
    validate_command_line_restore_source_target
  fi

  if [ -z "${ITEM}" ]; then
    return
  fi

  if [ "${ITEM}" != 'bookmarks' ] \
     && [ "${ITEM}" != 'books' ] \
     && [ "${ITEM}" != 'contacts' ] \
     && [ "${ITEM}" != 'messages' ] \
     && [ "${ITEM}" != 'notes' ] \
     && [ "${ITEM}" != 'packages' ] \
     && [ "${ITEM}" != 'pictures' ] \
     && [ "${ITEM}" != 'repositories' ] \
     && [ "${ITEM}" != 'time_tracker_logs' ] \
     && [ "${ITEM}" != 'todo' ] \
     && [ "${ITEM}" != 'videos' ]; then
    exit_error "Invalid item '${ITEM}'"
  fi

  if [ "${ACTION}" = 'backup' ]; then
    validate_command_line_backup_item
  else
    validate_command_line_restore_item
  fi
}

validate_command_line_backup_source_target() {
  if [ "${SOURCE}" != 'laptop' ] \
     && [ "${SOURCE}" != 'phone' ] \
     && [ "${SOURCE}" != 'server' ]; then
    exit_error "Invalid backup source '${SOURCE}'"
  fi

  if [ "${TARGET}" != 'hdd1' ] \
     && [ "${TARGET}" != 'hdd2' ] \
     && [ "${TARGET}" != 'server' ]; then
    exit_error "Invalid backup target '${TARGET}'"
  fi

  if [ "${SOURCE}" = 'server' ] && [ "${TARGET}" = 'server' ]; then
    exit_error "Cannot backup to itself"
  fi

  if [ "${SOURCE}" = 'phone' ] && [ "${TARGET}" = 'server' ]; then
    exit_error "Cannot backup from ${SOURCE} to ${TARGET}"
  fi
}

validate_command_line_backup_item() {
  if [ "${SOURCE}" = 'laptop' ]; then
    if [ "${TARGET}" = 'hdd1' ] || [ "${TARGET}" = 'hdd2' ]; then
      if [ "${ITEM}" != 'bookmarks' ] \
         && [ "${ITEM}" != 'books' ] \
         && [ "${ITEM}" != 'contacts' ] \
         && [ "${ITEM}" != 'notes' ] \
         && [ "${ITEM}" != 'todo' ] \
         && [ "${ITEM}" != 'videos' ]; then
        exit_error "Cannot backup ${ITEM} from ${SOURCE} to ${TARGET}"
      fi
    fi

    if [ "${TARGET}" = 'server' ]; then
      if [ "${ITEM}" != 'bookmarks' ] \
         && [ "${ITEM}" != 'notes' ] \
         && [ "${ITEM}" != 'time_tracker_logs' ] \
         && [ "${ITEM}" != 'todo' ]; then
        exit_error "Cannot backup ${ITEM} from ${SOURCE} to ${TARGET}"
      fi
    fi
  elif [ "${SOURCE}" = 'phone' ]; then
      if [ "${ITEM}" != 'messages' ] \
         && [ "${ITEM}" != 'pictures' ] \
         && [ "${ITEM}" != 'videos' ]; then
        exit_error "Cannot backup ${ITEM} from ${SOURCE} to ${TARGET}"
      fi
  elif [ "${SOURCE}" = 'server' ]; then
    if [ "${TARGET}" = 'hdd1' ] || [ "${TARGET}" = 'hdd2' ]; then
      if [ "${ITEM}" != 'bookmarks' ] \
         && [ "${ITEM}" != 'notes' ] \
         && [ "${ITEM}" != 'packages' ] \
         && [ "${ITEM}" != 'repositories' ] \
         && [ "${ITEM}" != 'todo' ]; then
        exit_error "Cannot backup ${ITEM} from ${SOURCE} to ${TARGET}"
      fi
    fi
  fi
}

validate_command_line_restore_source_target() {
  if [ "${SOURCE}" != 'hdd1' ] \
     && [ "${SOURCE}" != 'hdd2' ]; then
    exit_error "Invalid restore source '${SOURCE}'"
  fi

  if [ "${TARGET}" != 'server' ]; then
    exit_error "Invalid restore target '${TARGET}'"
  fi
}

validate_command_line_restore_item() {
  if [ "${ITEM}" != 'bookmarks' ] \
     && [ "${ITEM}" != 'notes' ] \
     && [ "${ITEM}" != 'packages' ] \
     && [ "${ITEM}" != 'repositories' ] \
     && [ "${ITEM}" != 'todo' ]; then
    exit_error "Cannot restore ${ITEM} from ${SOURCE} to ${TARGET}"
  fi
}

exit_error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  exit 1
} >&2

backup_laptop_hdd_bookmarks() {
  ${RSYNC} \
    --backup-dir="${HDD_BACKUP_DIR}/Bookmarks" \
    "${LOCAL_BROWSER_DIR}/bookmarks/urls" \
    "${HDD_BOOKMARKS_DIR}/${LOCAL_HOST}/urls"

  ${RSYNC} \
    --backup-dir="${HDD_BACKUP_DIR}/Bookmarks" \
    "${LOCAL_BROWSER_DIR}/quickmarks" \
    "${HDD_BOOKMARKS_DIR}/${LOCAL_HOST}/quickmarks"
}

backup_laptop_hdd_books() {
  ${RSYNC} --delete \
    --backup-dir="${HDD_BACKUP_DIR}/Books" \
    "${LOCAL_BOOKS_DIR}/" \
    "${HDD_BOOKS_DIR}"
}

backup_laptop_hdd_contacts() {
  ${RSYNC} --delete --exclude=".*" \
    --backup-dir="${HDD_BACKUP_DIR}/Contacts" \
    "${LOCAL_CONTACTS_DIR}/" \
    "${HDD_CONTACTS_DIR}"
}

backup_laptop_hdd_notes() {
  ${RSYNC} --delete --exclude=".*" \
    --backup-dir="${HDD_BACKUP_DIR}/Notes" \
    "${LOCAL_NOTES_DIR}/" \
    "${HDD_NOTES_DIR}/${LOCAL_HOST}"
}

backup_laptop_hdd_todo() {
  ${RSYNC} --delete --exclude=".*" \
    --backup-dir="${HDD_BACKUP_DIR}/Todo" \
    "${LOCAL_TODO_DIR}/" \
    "${HDD_TODO_DIR}/${LOCAL_HOST}"
}

backup_laptop_hdd_videos() {
  ${RSYNC} \
    "${LOCAL_VIDEOS_DIR}/" \
    "${HDD_VIDEOS_DIR}"
}

backup_laptop_server_bookmarks() {
  ${RSYNC} -b \
    "${LOCAL_BROWSER_DIR}/bookmarks/urls" \
    "${SERVER_HOST}:${SERVER_BOOKMARKS_DIR}/${LOCAL_HOST}/urls"

  ${RSYNC} -b \
    "${LOCAL_BROWSER_DIR}/quickmarks" \
    "${SERVER_HOST}:${SERVER_BOOKMARKS_DIR}/${LOCAL_HOST}/quickmarks"
}

backup_laptop_server_notes() {
  ${RSYNC} -b --delete --exclude=".*" \
    "${LOCAL_NOTES_DIR}/" \
    "${SERVER_HOST}:${SERVER_NOTES_DIR}/${LOCAL_HOST}"
}

backup_laptop_server_todo() {
  ${RSYNC} -b --delete --exclude=".*" \
    "${LOCAL_TODO_DIR}/" \
    "${SERVER_HOST}:${SERVER_TODO_DIR}/${LOCAL_HOST}"
}

backup_laptop_server_time_tracker_logs() {
  ${RSYNC} -b --delete --exclude=".*" \
    "${LOCAL_TIME_TRACKER_LOGS_DIR}/" \
    "${SERVER_HOST}:${SERVER_TIME_TRACKER_LOGS_DIR}/${LOCAL_HOST}"
}

backup_phone_hdd_messages() {
  ${RSYNC} --delete \
    "${PHONE_HOST}:${PHONE_SIGNAL_DIR}/" \
    "${HDD_MESSAGES_DIR}/Signal"

  ${RSYNC} --delete \
    "${PHONE_HOST}:${PHONE_WHATSAPP_DIR}/" \
    "${HDD_MESSAGES_DIR}/WhatsApp"
}

backup_phone_hdd_pictures() {
  ${RSYNC} --delete \
    "${PHONE_HOST}:${PHONE_PICTURES_DIR}/" \
    "${HDD_PICTURES_DIR}/Camera"
}

backup_phone_hdd_videos() {
  ${RSYNC} --delete \
    "${PHONE_HOST}:${PHONE_VIDEOS_DIR}/" \
    "${HDD_VIDEOS_DIR}/Camera"
}

backup_server_hdd_bookmarks() {
  ${RSYNC} --delete --exclude="*~" \
    "${SERVER_HOST}:${SERVER_BOOKMARKS_DIR}/" \
    "${HDD_BOOKMARKS_DIR}"
}

backup_server_hdd_notes() {
  ${RSYNC} --delete --exclude="*~" \
    "${SERVER_HOST}:${SERVER_NOTES_DIR}/" \
    "${HDD_NOTES_DIR}"
}

backup_server_hdd_packages() {
  ${RSYNC} --delete \
    "${SERVER_HOST}:${SERVER_PACKAGES_DIR}/" \
    "${HDD_PACKAGES_DIR}"
}

backup_server_hdd_todo() {
  ${RSYNC} --delete --exclude="*~" \
    "${SERVER_HOST}:${SERVER_TODO_DIR}/" \
    "${HDD_TODO_DIR}"
}

backup_server_hdd_repositories() {
  ${RSYNC} --delete \
    "${SERVER_HOST}:${SERVER_REPOSITORIES_DIR}/" \
    "${HDD_REPOSITORIES_DIR}"
}

restore_hdd_server_bookmarks() {
  ${RSYNC} \
    "${HDD_BOOKMARKS_DIR}/" \
    "${SERVER_HOST}:${SERVER_BOOKMARKS_DIR}"
}

restore_hdd_server_notes() {
  ${RSYNC} \
    "${HDD_NOTES_DIR}/" \
    "${SERVER_HOST}:${SERVER_NOTES_DIR}"
}

restore_hdd_server_packages() {
  ${RSYNC} \
    "${HDD_PACKAGES_DIR}/" \
    "${SERVER_HOST}:${SERVER_PACKAGES_DIR}"
}

restore_hdd_server_repositories() {
  ${RSYNC} \
    "${HDD_REPOSITORIES_DIR}/" \
    "${SERVER_HOST}:${SERVER_REPOSITORIES_DIR}"
}

restore_hdd_server_todo() {
  ${RSYNC} \
    "${HDD_TODO_DIR}/" \
    "${SERVER_HOST}:${SERVER_TODO_DIR}"
}

init_hdd() {
  HDD_BASE_DIR="$(
    lsblk -n -o UUID,MOUNTPOINT \
      | grep "^$1 " \
      | awk '{ print $2 }'
  )"

  if [ -z "${HDD_BASE_DIR}" ]; then
    exit_error "HDD is not connected"
  fi

  init_hdd_variables
}

backup_laptop_hdd() {
  for i in bookmarks books contacts notes todo videos; do
    printf 'laptop -> hdd: %s\n' "$i"
    "backup_laptop_hdd_$i"
  done
}

backup_laptop_server() {
  for i in bookmarks notes time_tracker_logs todo; do
    printf 'laptop -> server: %s\n' "$i"
    "backup_laptop_server_$i"
  done
}

backup_phone_hdd() {
  for i in messages pictures videos; do
    printf 'phone -> hdd: %s\n' "$i"
    "backup_phone_hdd_$i"
  done
}

backup_server_hdd() {
  for i in bookmarks notes packages repositories todo; do
    printf 'server -> hdd: %s\n' "$i"
    "backup_server_hdd_$i"
  done
}

restore_hdd_server() {
  for i in bookmarks notes packages repositories todo; do
    printf 'hdd -> server: %s\n' "$i"
    "restore_hdd_server_$i"
  done
}

init_variables
parse_command_line "$@"
validate_command_line

if [ "${TARGET}" = 'hdd1' ]; then
  init_hdd "${HDD1_UUID}"
  TARGET='hdd'
elif [ "${TARGET}" = 'hdd2' ]; then
  init_hdd "${HDD2_UUID}"
  TARGET='hdd'
elif [ "${SOURCE}" = 'hdd1' ]; then
  init_hdd "${HDD1_UUID}"
  SOURCE='hdd'
elif [ "${SOURCE}" = 'hdd2' ]; then
  init_hdd "${HDD2_UUID}"
  SOURCE='hdd'
fi

if [ "${CHECK}" = 'true' ]; then
  RSYNC="${RSYNC} --dry-run --info=NONE --checksum --itemize-changes"
fi

if [ -n "${ITEM}" ]; then
  "${ACTION}_${SOURCE}_${TARGET}_${ITEM}"
else
  "${ACTION}_${SOURCE}_${TARGET}"
fi
