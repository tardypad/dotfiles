#!/bin/sh

init_variables() {
  COMMAND=${0##*/}

  PID_FILE_PATH="${XDG_RUNTIME_DIR:-/tmp}/screencast"
  PID_FILE_PATH_QUIET="${PID_FILE_PATH}_quiet"

  RECORD_FILE_PATH="${XDG_DESKTOP_DIR:-$HOME/Desktop}/screencast_$( date +'%Y%m%d%H%M%S' ).mp4"

  QUIET=false
  ACTION='status'
  AUDIO_DEVICE=
}

parse_command_line() {
  while getopts q OPT; do
    case "${OPT}" in
      q) QUIET=true ;;
      ?) exit_error ;;
    esac
  done

  shift $(( OPTIND - 1 ))

  [ -z "$1" ] || ACTION="$1"
  [ -z "$2" ] || AUDIO_DEVICE="$2"
}

validate_command_line() {
  if [ "${ACTION}" != 'start' ] \
     && [ "${ACTION}" != 'stop' ] \
     && [ "${ACTION}" != 'toggle' ] \
     && [ "${ACTION}" != 'status' ]; then
    exit_error "Invalid action '${ACTION}'"
  fi
}

exit_error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  exit 1
} >&2

record_start() {
  REGION=$( slurp 2> /dev/null )

  [ -z "${REGION}" ] && return 1

  EXTRA_OPTIONS=
  if [ -n "${AUDIO_DEVICE}" ]; then
    EXTRA_OPTIONS="--audio=${AUDIO_DEVICE}"
  fi

  # shellcheck disable=SC2086
  wf-recorder -g "${REGION}" -f "${RECORD_FILE_PATH}" ${EXTRA_OPTIONS} &

  CUR_RECORD="${PID_FILE_PATH}"
  if [ "${QUIET}" = 'true' ]; then
    CUR_RECORD="${PID_FILE_PATH_QUIET}"
  fi

  echo $! > "${CUR_RECORD}" \
    && update_i3blocks
}

record_status() {
   if [ -f "${PID_FILE_PATH_QUIET}" ]; then
    echo 'not recording'
    return
   fi

  if [ -f "${PID_FILE_PATH}" ]; then
    echo 'recording'
  else
    echo 'not recording'
  fi
}

record_stop() {
  CUR_RECORD="$( current_record )"

  if [ -z "${CUR_RECORD}" ]; then
    echo 'Not currently recording' >&2
    return 1
  fi

  pkill -INT -F "${CUR_RECORD}" \
    && rm -f "${CUR_RECORD}" \
    && update_i3blocks
}

record_toggle() {
  if [ -n "$( current_record )" ]; then
    record_stop
  else
    record_start
  fi
}

update_i3blocks() {
  pkill -x -RTMIN+3 i3blocks
}

current_record() {
  if [ -f "${PID_FILE_PATH_QUIET}" ]; then
    echo "${PID_FILE_PATH_QUIET}"
  elif [ -f "${PID_FILE_PATH}" ]; then
    echo "${PID_FILE_PATH}"
  fi
}

init_variables
parse_command_line "$@"
validate_command_line

"record_${ACTION}"
