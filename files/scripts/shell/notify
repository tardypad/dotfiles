#!/bin/sh

init_variables() {
  COMMAND=${0##*/}

  SUMMARY=
  BODY=
  CATEGORY=
  IDENTIFIER=
  EXPIRE_TIME=0
  REPLACE_ID=0
}

parse_command_line() {
  while getopts c:i:s:t: OPT; do
    case "${OPT}" in
      c) CATEGORY="${OPTARG}" ;;
      i) IDENTIFIER="${OPTARG}" ;;
      t) EXPIRE_TIME="${OPTARG}" ;;
      ?) exit_error ;;
    esac
  done

  shift $(( OPTIND - 1 ))

  SUMMARY="$1"
  BODY="$2"
}

validate_command_line() {
  if [ -z "${SUMMARY}" ]; then
    exit_error 'missing summary argument'
  fi

  if ! echo "${EXPIRE_TIME}" | grep -E -q '^[0-9]*$'; then
    exit_error 'expire time must be a number'
  fi
}

exit_error() {
  [ -z "$1" ] || echo "${COMMAND}: $1"
  exit 1
} >&2

send_notification() {
  if [ -n "${IDENTIFIER}" ]; then
    NOTIFICATION_FILE="${XDG_RUNTIME_DIR:-/tmp}/notification_${IDENTIFIER}"
    if [ -f "${NOTIFICATION_FILE}" ]; then
      REPLACE_ID=$( cat "${NOTIFICATION_FILE}" )
    fi
  fi

  NOTIFICATION_ID=$(
    fyi --print-id \
      --replaces "${REPLACE_ID}" \
      --category "${CATEGORY}" \
      --expire-time "$(( EXPIRE_TIME * 1000 ))" \
      "${SUMMARY}" \
      "${BODY}"
  )

  if [ -n "${IDENTIFIER}" ]; then
    echo "${NOTIFICATION_ID}" > "${NOTIFICATION_FILE}"
  fi
}

init_variables
parse_command_line "$@"
validate_command_line

send_notification
